\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}pthread.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdio.h\PYGZgt{}}
\PYG{k+kt}{int} \PYG{n}{value} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{k+kt}{void} \PYG{o}{*}\PYG{n+nf}{runner}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{param}\PYG{p}{);} \PYG{c+cm}{/* the thread */}
\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{argv}\PYG{p}{[])}
\PYG{p}{\PYGZob{}}
\PYG{n}{pid} \PYG{n}{t} \PYG{n}{pid}\PYG{p}{;}
\PYG{n}{pthread} \PYG{n}{t} \PYG{n}{tid}\PYG{p}{;}
\PYG{n}{pthread} \PYG{n}{attr} \PYG{n}{t} \PYG{n}{attr}\PYG{p}{;}
\PYG{n}{pid} \PYG{o}{=} \PYG{n}{fork}\PYG{p}{();}
\PYG{k}{if} \PYG{p}{(}\PYG{n}{pid} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+cm}{/* child process */}
\PYG{n}{pthread} \PYG{n}{attr} \PYG{n}{init}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{attr}\PYG{p}{);}
\PYG{n}{pthread} \PYG{n}{create}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{tid}\PYG{p}{,}\PYG{o}{\PYGZam{}}\PYG{n}{attr}\PYG{p}{,}\PYG{n}{runner}\PYG{p}{,}\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{n}{pthread} \PYG{n}{join}\PYG{p}{(}\PYG{n}{tid}\PYG{p}{,}\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}CHILD: value = \PYGZpc{}d\PYGZdq{}}\PYG{p}{,}\PYG{n}{value}\PYG{p}{);} \PYG{c+cm}{/* LINE C */}
\PYG{p}{\PYGZcb{}}
\PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{pid} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+cm}{/* parent process */}
\PYG{n}{wait}\PYG{p}{(}\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}PARENT: value = \PYGZpc{}d\PYGZdq{}}\PYG{p}{,}\PYG{n}{value}\PYG{p}{);} \PYG{c+cm}{/* LINE P */}
\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void} \PYG{o}{*}\PYG{n+nf}{runner}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{param}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{n}{value} \PYG{o}{=} \PYG{l+m+mi}{5}\PYG{p}{;}
\PYG{n}{pthread} \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
